name: CI

on: [push]

jobs:
  testing:
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache .yarn/cache
        uses: actions/cache@v1.0.0
        with:
          path: .yarn/cache/
          key: yarncache-${{ matrix.node-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            yarncache-${{ matrix.node-version }}-

      - name: Cache node_modules
        uses: actions/cache@v1.0.0
        with:
          path: node_modules/
          key: nodemodules-${{ matrix.node-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            nodemodules-${{ matrix.node-version }}-

      - name: Install deps
        run: yarn install
      - name: Testing @fluer/froute
        working-directory: pkgs/froute
        run: yarn test

  build-lint:
    strategy:
      matrix:
        steps: [build, lint]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js for use with actions
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache .yarn/cache
        uses: actions/cache@v1.0.0
        with:
          path: .yarn/cache/
          key: yarncache-${{ matrix.node-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            yarncache-${{ matrix.node-version }}-

      - name: Cache node_modules
        uses: actions/cache@v1.0.0
        with:
          path: node_modules/
          key: nodemodules-${{ matrix.node-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            nodemodules-${{ matrix.node-version }}-

      - name: Install deps
        run: yarn install
      # - name: Linting
      #   if: ${{ matrix.steps == 'lint' }}
      #   run: yarn eslint .
      - name: Building
        if: ${{ matrix.steps == 'build' }}
        working-directory: pkgs/froute
        run: yarn prepublishOnly
